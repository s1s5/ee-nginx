  location {{ location }} {{ "{" }}
    {% if let Some(domain) = domain %}{% if config.docker_mode %}resolver {{ nameserver }} valid=2s ipv6=off;
    set $target "{{ domain }}{{ alias }}";
    rewrite {{ location }}(.*) /$1 break;
    {% if alias.ends_with("/") %}proxy_pass $target$1$is_args$args;
    {% else %}proxy_pass $target{{ location }}$1$is_args$args;
    {% endif %}{% else %}proxy_pass {{ domain }}{{ alias }};
    {% endif %}proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_redirect off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
{% else %}    alias {{ alias }};
    index index.html index.htm;
{% match cache_type %}{% when CacheType::MustRevalidate %}    add_header Cache-Control "no-cache";
{% when CacheType::Versioned %}    add_header Cache-Control "public, max-age=31536000";
{% when CacheType::None %}    add_header Cache-Control "no-store";
{% endmatch %}{% endif %}{% if fallback %}    try_files $uri $uri/ / =404;
{% endif %}{% if let Some(basic_auth) = basic_auth %}    auth_basic "Authorization required";
    auth_basic_user_file {{ basic_auth }};
{% endif %}  {{ "}" }}
